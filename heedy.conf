plugin "myplugin" {
    version = "1.0.0"
    description = "This plugin does cool stuff!"
    license = "Apache-2.0"

    // If the plugin has a frontend component, it needs to be registered here, so that it is loaded
    // whenever heedy is opened in the browser.
    frontend = "myplugin/main.mjs"

    // If the plugin has a backend server, it will be started by heedy while initializing. The "run"
    // command tells heedy to start the server using Python, and that the server will listed on the
    // given unix socket in the data/ directory.
    run "backend" {
        type = "python"
        path = "backend/main.py"
        api = "unix:myplugin.sock"
    }

    // The backend server is exposed by registering the routes that it implements, and routing them
    // to the correct api socket. The configuration given here routes all traffic from /api/myplugin
    // to the plugin's backend server
    routes = {
        "/api/myplugin": "run:backend",
        "/api/myplugin/*": "run:backend"
    }

    // If the plugin integrates with any service, or otherwise adds data itself, it should create an app
    // for that purpose. Each user can then enable the plugin's integrations/services by activating the app.
    /*
        app "myapp" {
            name = "My App"
            description = "This app does myplugin stuff!"
            icon = "fas fa-hand-sparkles"
        }
    */
    
}